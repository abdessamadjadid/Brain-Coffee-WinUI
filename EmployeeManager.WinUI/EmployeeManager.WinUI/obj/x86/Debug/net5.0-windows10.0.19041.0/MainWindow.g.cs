#pragma checksum "C:\Users\Abdessamad\Desktop\Desktop apps Resources\03\demos\after\EmployeeManager.WinUI\EmployeeManager.WinUI\MainWindow.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "43EBFF633FC17C7D8965B21DEBE6F788A2ED363E3DAC6393ABF5D5C59E897429"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using WinRT;

namespace EmployeeManager.WinUI
{
    partial class MainWindow : 
        global::Microsoft.UI.Xaml.Window, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_DatePicker_SelectedDate(global::Microsoft.UI.Xaml.Controls.DatePicker obj, global::System.Nullable<global::System.DateTimeOffset> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.DateTimeOffset) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.DateTimeOffset), targetNullValue);
                }
                obj.SelectedDate = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(global::Microsoft.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainWindow_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IMainWindow_Bindings
        {
            private global::EmployeeManager.WinUI.MainWindow dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Grid obj2;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj3;
            private global::Microsoft.UI.Xaml.Controls.DatePicker obj4;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj5;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj6;
            private global::Microsoft.UI.Xaml.Controls.Button obj7;
            private global::Microsoft.UI.Xaml.Controls.Button obj8;
            private global::Microsoft.UI.Xaml.Controls.ListView obj9;

            // Fields for each event bindings event handler.
            private global::Microsoft.UI.Xaml.RoutedEventHandler obj7Click;
            private global::Microsoft.UI.Xaml.RoutedEventHandler obj8Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2VisibilityDisabled = false;
            private static bool isobj3TextDisabled = false;
            private static bool isobj4SelectedDateDisabled = false;
            private static bool isobj5ItemsSourceDisabled = false;
            private static bool isobj5SelectedValueDisabled = false;
            private static bool isobj6IsCheckedDisabled = false;
            private static bool isobj7IsEnabledDisabled = false;
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj9SelectedItemDisabled = false;

            private MainWindow_obj1_BindingsTracking bindingsTracking;

            public MainWindow_obj1_Bindings()
            {
                this.bindingsTracking = new MainWindow_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 38 && columnNumber == 11)
                {
                    isobj2VisibilityDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 16)
                {
                    isobj3TextDisabled = true;
                }
                else if (lineNumber == 50 && columnNumber == 19)
                {
                    isobj4SelectedDateDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 17)
                {
                    isobj5ItemsSourceDisabled = true;
                }
                else if (lineNumber == 55 && columnNumber == 17)
                {
                    isobj5SelectedValueDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 17)
                {
                    isobj6IsCheckedDisabled = true;
                }
                else if (lineNumber == 59 && columnNumber == 15)
                {
                    isobj7IsEnabledDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 15)
                {
                    this.obj7.Click -= obj7Click;
                }
                else if (lineNumber == 29 && columnNumber == 33)
                {
                    this.obj8.Click -= obj8Click;
                }
                else if (lineNumber == 31 && columnNumber == 17)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 32 && columnNumber == 17)
                {
                    isobj9SelectedItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // MainWindow.xaml line 37
                        this.obj2 = target.As<Microsoft.UI.Xaml.Controls.Grid>();
                        break;
                    case 3: // MainWindow.xaml line 47
                        this.obj3 = target.As<Microsoft.UI.Xaml.Controls.TextBox>();
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 4: // MainWindow.xaml line 49
                        this.obj4 = target.As<Microsoft.UI.Xaml.Controls.DatePicker>();
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // MainWindow.xaml line 51
                        this.obj5 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // MainWindow.xaml line 56
                        this.obj6 = target.As<Microsoft.UI.Xaml.Controls.CheckBox>();
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // MainWindow.xaml line 58
                        this.obj7 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                        this.obj7Click = (global::System.Object p0, global::Microsoft.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.SelectedEmployee.Save();
                        };
                        (target.As<Microsoft.UI.Xaml.Controls.Button>()).Click += obj7Click;
                        break;
                    case 8: // MainWindow.xaml line 29
                        this.obj8 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                        this.obj8Click = (global::System.Object p0, global::Microsoft.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Load();
                        };
                        (target.As<Microsoft.UI.Xaml.Controls.Button>()).Click += obj8Click;
                        break;
                    case 9: // MainWindow.xaml line 30
                        this.obj9 = target.As<Microsoft.UI.Xaml.Controls.ListView>();
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMainWindow_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = newDataRoot.As<EmployeeManager.WinUI.MainWindow>();
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::EmployeeManager.WinUI.MainWindow obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::EmployeeManager.ViewModel.MainViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsEmployeeSelected(obj.IsEmployeeSelected, phase);
                        this.Update_ViewModel_SelectedEmployee(obj.SelectedEmployee, phase);
                        this.Update_ViewModel_JobRoles(obj.JobRoles, phase);
                        this.Update_ViewModel_Employees(obj.Employees, phase);
                    }
                }
            }
            private void Update_ViewModel_IsEmployeeSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_IsEmployeeSelected_Cast_IsEmployeeSelected_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ViewModel_IsEmployeeSelected_Cast_IsEmployeeSelected_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainWindow.xaml line 37
                    if (!isobj2VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj2, obj);
                    }
                }
            }
            private void Update_ViewModel_SelectedEmployee(global::EmployeeManager.ViewModel.EmployeeViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedEmployee(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEmployee_FirstName(obj.FirstName, phase);
                        this.Update_ViewModel_SelectedEmployee_EntryDate(obj.EntryDate, phase);
                        this.Update_ViewModel_SelectedEmployee_JobRoleId(obj.JobRoleId, phase);
                        this.Update_ViewModel_SelectedEmployee_IsCoffeeDrinker(obj.IsCoffeeDrinker, phase);
                        this.Update_ViewModel_SelectedEmployee_CanSave(obj.CanSave, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainWindow.xaml line 30
                    if (!isobj9SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEmployee_FirstName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainWindow.xaml line 47
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEmployee_EntryDate(global::System.DateTimeOffset obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainWindow.xaml line 49
                    if (!isobj4SelectedDateDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_DatePicker_SelectedDate(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_JobRoles(global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.Common.Model.JobRole> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_JobRoles(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainWindow.xaml line 51
                    if (!isobj5ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEmployee_JobRoleId(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainWindow.xaml line 51
                    if (!isobj5SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEmployee_IsCoffeeDrinker(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainWindow.xaml line 56
                    if (!isobj6IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEmployee_CanSave(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainWindow.xaml line 58
                    if (!isobj7IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj7, obj);
                    }
                }
            }
            private void Update_ViewModel_Employees(global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.ViewModel.EmployeeViewModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Employees(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainWindow.xaml line 30
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_3_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedEmployee != null)
                            {
                                this.dataRoot.ViewModel.SelectedEmployee.FirstName = this.obj3.Text;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_4_SelectedDate()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedEmployee != null)
                            {
                                this.dataRoot.ViewModel.SelectedEmployee.EntryDate = (global::System.DateTimeOffset)this.obj4.SelectedDate;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedEmployee != null)
                            {
                                this.dataRoot.ViewModel.SelectedEmployee.JobRoleId = (global::System.Int32)this.obj5.SelectedValue;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedEmployee != null)
                            {
                                this.dataRoot.ViewModel.SelectedEmployee.IsCoffeeDrinker = (global::System.Boolean)this.obj6.IsChecked;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEmployee = (global::EmployeeManager.ViewModel.EmployeeViewModel)this.obj9.SelectedItem;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MainWindow_obj1_BindingsTracking
            {
                private global::System.WeakReference<MainWindow_obj1_Bindings> weakRefToBindingObj; 

                public MainWindow_obj1_BindingsTracking(MainWindow_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MainWindow_obj1_Bindings>(obj);
                }

                public MainWindow_obj1_Bindings TryGetBindingObject()
                {
                    MainWindow_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_SelectedEmployee(null);
                    UpdateChildListeners_ViewModel_JobRoles(null);
                    UpdateChildListeners_ViewModel_Employees(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::EmployeeManager.ViewModel.MainViewModel obj = sender as global::EmployeeManager.ViewModel.MainViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsEmployeeSelected(obj.IsEmployeeSelected, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEmployee(obj.SelectedEmployee, DATA_CHANGED);
                                bindings.Update_ViewModel_JobRoles(obj.JobRoles, DATA_CHANGED);
                                bindings.Update_ViewModel_Employees(obj.Employees, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsEmployeeSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsEmployeeSelected(obj.IsEmployeeSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEmployee":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEmployee(obj.SelectedEmployee, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "JobRoles":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_JobRoles(obj.JobRoles, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Employees":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Employees(obj.Employees, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::EmployeeManager.ViewModel.MainViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::EmployeeManager.ViewModel.MainViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedEmployee(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::EmployeeManager.ViewModel.EmployeeViewModel obj = sender as global::EmployeeManager.ViewModel.EmployeeViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SelectedEmployee_FirstName(obj.FirstName, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEmployee_EntryDate(obj.EntryDate, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEmployee_JobRoleId(obj.JobRoleId, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEmployee_IsCoffeeDrinker(obj.IsCoffeeDrinker, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEmployee_CanSave(obj.CanSave, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "FirstName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEmployee_FirstName(obj.FirstName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EntryDate":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEmployee_EntryDate(obj.EntryDate, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "JobRoleId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEmployee_JobRoleId(obj.JobRoleId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsCoffeeDrinker":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEmployee_IsCoffeeDrinker(obj.IsCoffeeDrinker, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanSave":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEmployee_CanSave(obj.CanSave, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::EmployeeManager.ViewModel.EmployeeViewModel cache_ViewModel_SelectedEmployee = null;
                public void UpdateChildListeners_ViewModel_SelectedEmployee(global::EmployeeManager.ViewModel.EmployeeViewModel obj)
                {
                    if (obj != cache_ViewModel_SelectedEmployee)
                    {
                        if (cache_ViewModel_SelectedEmployee != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedEmployee).PropertyChanged -= PropertyChanged_ViewModel_SelectedEmployee;
                            cache_ViewModel_SelectedEmployee = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedEmployee = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedEmployee;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_JobRoles(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.Common.Model.JobRole> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.Common.Model.JobRole>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_JobRoles(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    MainWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.Common.Model.JobRole> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.Common.Model.JobRole>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.Common.Model.JobRole> cache_ViewModel_JobRoles = null;
                public void UpdateChildListeners_ViewModel_JobRoles(global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.Common.Model.JobRole> obj)
                {
                    if (obj != cache_ViewModel_JobRoles)
                    {
                        if (cache_ViewModel_JobRoles != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_JobRoles).PropertyChanged -= PropertyChanged_ViewModel_JobRoles;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_JobRoles).CollectionChanged -= CollectionChanged_ViewModel_JobRoles;
                            cache_ViewModel_JobRoles = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_JobRoles = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_JobRoles;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_JobRoles;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Employees(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.ViewModel.EmployeeViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.ViewModel.EmployeeViewModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Employees(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    MainWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.ViewModel.EmployeeViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.ViewModel.EmployeeViewModel>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.ViewModel.EmployeeViewModel> cache_ViewModel_Employees = null;
                public void UpdateChildListeners_ViewModel_Employees(global::System.Collections.ObjectModel.ObservableCollection<global::EmployeeManager.ViewModel.EmployeeViewModel> obj)
                {
                    if (obj != cache_ViewModel_Employees)
                    {
                        if (cache_ViewModel_Employees != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Employees).PropertyChanged -= PropertyChanged_ViewModel_Employees;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Employees).CollectionChanged -= CollectionChanged_ViewModel_Employees;
                            cache_ViewModel_Employees = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Employees = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Employees;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Employees;
                        }
                    }
                }
                public void RegisterTwoWayListener_3(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_4(global::Microsoft.UI.Xaml.Controls.DatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.DatePicker.SelectedDateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_SelectedDate();
                        }
                    });
                }
                public void RegisterTwoWayListener_5(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_6(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_SelectedItem();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MainWindow.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Window element1 = (global::Microsoft.UI.Xaml.Window)target;
                    MainWindow_obj1_Bindings bindings = new MainWindow_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Activated += bindings.Activated;
                }
                break;
            }
            return returnValue;
        }
    }
}

